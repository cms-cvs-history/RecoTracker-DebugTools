process Debug  = 
{
    ### keep the logging output to a nice level ###
    #include "FWCore/MessageService/data/MessageLogger.cfi"
    service = MessageLogger
    {
	untracked vstring destinations = {"cout"}
	untracked vstring categories    = { "CkfDebugger"}
	#untracked vstring categories    = { "CkfDebugger","CkfPattern" }
	untracked vstring debugModules = {"ckfDebugTrackCandidates"}
	untracked PSet cout            = {
	    untracked string threshold = "DEBUG"
	    untracked PSet default = { untracked int32 limit = 0 }
	    untracked PSet CkfDebugger = { untracked int32 limit = 10000000 }
	    untracked PSet CkfPattern = { untracked int32 limit = 10000000 }
	}
    }
    
    untracked PSet maxEvents = {untracked int32 input = 10}
    source = PoolSource { 
	#untracked vstring fileNames = {'rfio:/castor/cern.ch/user/c/cerati/150pre4singlemu10GeV.root'}
	untracked vstring fileNames = {'file:../../CkfPattern/test/seeds.root'}
	untracked uint32 debugVerbosity = 10
	untracked bool   debugFlag     = true
    }

    # CKFTrackCandidateMaker
    include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"

    es_module CkfDebugTrajectoryBuilder = CkfDebugTrajectoryBuilderESProducer
    {
	string ComponentName = "CkfDebugTrajectoryBuilder"
	
	double ptCut                = 0.9
	int32  maxNumberOfHits      = -1
	int32  maxCand              = 5
	int32  maxLostHit           = 1       
	int32  maxConsecLostHit     = 1
	double lostHitPenalty       = 30.
	bool   intermediateCleaning = true
	int32  minimumNumberOfHits  = 5
	bool   alwaysUseInvalidHits = true
	
	string TTRHBuilder          = "WithTrackAngle"
	string propagatorAlong      = "PropagatorWithMaterial"
	string propagatorOpposite   = "PropagatorWithMaterialOpposite"
	string updator              = "KFUpdator"
	string estimator            = "Chi2"
    
    }
    module ckfDebugTrackCandidates = CkfDebugTrackCandidateMaker
    {     
	#bool   seedCleaning         = false
	string SeedProducer          = "globalMixedSeeds"
	string SeedLabel             = ""
	string TrajectoryBuilder    = "CkfDebugTrajectoryBuilder"
        string RedundantSeedCleaner  = "CachingSeedCleanerBySharedInput"	
	
	# nested parameter set for TransientInitialStateEstimator
	PSet TransientInitialStateEstimatorParameters =
	{
	    string propagatorAlongTISE    = "PropagatorWithMaterial"
	    string propagatorOppositeTISE = "PropagatorWithMaterialOpposite"
	} 
	PSet NavigationPSet = {
	    string ComponentName = "SimpleNavigationSchool"
	}
    }
    #module mix = MixingModule {int32 bunchspace = 25}
    module out = AsciiOutputModule {}
    #module out = PoolOutputModule {untracked string fileName = '/castor/cern.ch/user/c/cerati/test.root' }

    #path p = {mix,trackerlocalreco,globalMixedSeeds} 
    path p = {ckfDebugTrackCandidates}
    endpath outpath = { out }
}
